{
	"compiler": {
		"version": "0.8.18+commit.87f61d96"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "landlordAddr",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "tenantAddr",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "propertyName",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "propertyLocation",
						"type": "string"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "Transfer",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "depositSecurityDeposit",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "landlord",
				"outputs": [
					{
						"internalType": "address payable",
						"name": "addr",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "agrees",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "lease",
				"outputs": [
					{
						"internalType": "enum BlockLease.LeaseState",
						"name": "state",
						"type": "uint8"
					},
					{
						"internalType": "uint256",
						"name": "rentAmount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "securityDeposit",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "rentalDuration",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "property",
				"outputs": [
					{
						"internalType": "string",
						"name": "name",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "location",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "rentAmount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "rentDuration",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "securityDeposit",
						"type": "uint256"
					}
				],
				"name": "setTerms",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "signAgreement",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "tenant",
				"outputs": [
					{
						"internalType": "address payable",
						"name": "addr",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "agrees",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "unsignAgreement",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "withdrawSecurityDeposit",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"constructor": {
					"details": "Initialize the lease contract. Landlord, tenant, and property details cannot be changed for a contract.",
					"params": {
						"landlordAddr": "the account address of the landlord ",
						"propertyLocation": "the location of the property being leased out",
						"propertyName": "the name of the property being leased out",
						"tenantAddr": "the account address of the tenant"
					}
				},
				"depositSecurityDeposit()": {
					"details": "The tenant can deposit money for the security deposit to activate the lease"
				},
				"setTerms(uint256,uint256,uint256)": {
					"details": "Set the terms for lease. Can be called by the tenant or the landlord while the lease is inactive.",
					"params": {
						"rentAmount": "amount of rent in Wei",
						"rentDuration": "length of lease agreement in months"
					}
				},
				"signAgreement()": {
					"details": "The tenant or landlord can accept the agreement.  Both parties have to agree for the contract to be put in active state."
				},
				"unsignAgreement()": {
					"details": "The tenant or landlord can revoke their agreement to the lease while the lease is inactive."
				},
				"withdrawSecurityDeposit()": {
					"details": "The tenant can withdraw the security deposit once the lease is complete."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/BlockLease.sol": "BlockLease"
		},
		"evmVersion": "paris",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/BlockLease.sol": {
			"keccak256": "0xb4a7d3123f5a2644e60b878042b396b2898cfa5127896b7c0552159641e9017b",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://5d851f2f2792fc484a16f06d047f242596e880ad3ce8ba725c8e7e68d7d5c5ce",
				"dweb:/ipfs/QmPLsPqc6vGZDCRq1gwUG3hJWMG6Zbcwo5PzLLuc19FUKK"
			]
		}
	},
	"version": 1
}